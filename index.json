[{"content":"Introduction to Course www.awsacademy.com\nDefinisi Layanan komputasi yang diletakkan di internet.\nSAAS = Software as a Services, Software yang diletakkan diinternet. DIbayarkan per-orang atau per-kapasitas : (sperti sewa hotel)\nOffice 365 Instagram Meta Email PAAS = Platform as A Services (seperti sewa rumah). Di tagih berdasarkan konsumsi: berapa banyak dipakai.\nCloud Storage Elastic Benastalk IAAS = Infrastructure as A Services (seperti sewa tanah), jargon Lift and Save\nVM (Virtual Machine) On-premise (SHM) adalah punya server sendiri.\nMengubah dari kapex(kapital -\u0026gt; kepemilikan) ke opex (operasional)\nCloud dibuat dari 2 teknologi berikut:\nVirtualisasi = Memvirtualkan hardware menjadi software. Dalam satu host OS ada beberapa OS yang berjalan. Distributed Computing = Kumpulan virtualisasi yang diterapkan pada lingkungan terdistribusi (bagi-bagi penderitaan). Sizing: aktivitas untuk mendefinisikan kebutuhan cloud computing terhadap sebuah masalah.\nContoh via pricing calculator. Teknologi anda modern pilih PAAS Teknologi anda jadul pilih IAAS\nBuku blitz scale\nKonsep clustering, active passive clustering = layanan high availability jika ada server yang mati, maka akan ada server lain yang menggantikan, atleast 30 km dari lokasi.\nScalability sangat relevant dengan automating.\nScale up (vertical scalability) Menambah kapasitas dan kemampuan mesin (bisa diautomasi) atau upscaling. Scale down (horizontal scalability) Menambah mesin untuk melayani penggunaan (bisa diautomasi, misal ketika penggunaan sudah di atas berapa persen) Mendukung high availability Scalability bisa didasarkan pada satu metric.\nCaching menawarkan alokasi ruang agar semakin dekat.\nDecoupling\nRoles in Cloud Computing IT Professional Generalist Automation and Deployment Script IT Leader (IT Manager, IT Director, IT Supervisor) Day to Day operation Budgeting Managerial Stay informed about new technologies Hands on during early stages of a project then delegates the team to take over Developer Menuliskan code Memikirkan projek pada application leve DevOps Engineer Menyiapkan infrastruktur Automasi Infrastruktur (CI/CD) Cloud Architect Mengadopsi teknologi baru Membuat dokumentasi, proses, dan tools kepada developer Resource management Cost optimization Bekerjasama dengan developer dan membiarkan developer untuk berinovasi Defining best practices for performance, reliability, and security Requirements untuk Dapat Badge Selesaikan guide lab Selesaikan challenge lab Selesaikan knowledge Check Selesaikan capstone project Sertifikasi Cloud Architect Associate (ujian 90 menit)\n","date":"2022/09/16","image":"https://devismail2y.github.io/notashoppingnote/new-notashoppingnote/cloud-1/cloud.jpg","permalink":"https://devismail2y.github.io/notashoppingnote/new-notashoppingnote/cloud-1/","summary":"Introduction to Course www.awsacademy.com\nDefinisi Layanan komputasi yang diletakkan di internet.\nSAAS = Software as a Services, Software yang diletakkan diinternet. DIbayarkan per-orang atau per-kapasitas : (sperti sewa hotel)\nOffice 365 Instagram Meta Email PAAS = Platform as A Services (seperti sewa rumah). Di tagih berdasarkan konsumsi: berapa banyak dipakai.\nCloud Storage Elastic Benastalk IAAS = Infrastructure as A Services (seperti sewa tanah), jargon Lift and Save\nVM (Virtual Machine) On-premise (SHM) adalah punya server sendiri.","title":"Cloud 1 - Introduction"},{"content":"Well-Architected Framework .\nA guide that is designed to help you build the most secure, high-performing, resilient, and efficient infrastructure possible for your cloud applications and workloads.\nSecurity: the ability to protect information, systems, and assets while delivering business value through risk assessments and mitigation strategies. The implementation: strong identity foundation, enable traceability, security at all layers, automate security best practices,and protect data in transit and at rest.\nOperational Excellence: the ability to run systems and gain insight into their operations to deliver business value. It also addresses the ability to continuously improve supporting processes and procedures.\nAware how it will be deployed, updated, and operated. Implementing engineering practices to reduce defect and do quick safe fixes. Enable observation through logging, instrumentation, and business technical metrics. Reliability: the ability of a system to recover from infrastructure or service disruptions and dynamically acquire computing resources to meet demand. It also addresses the ability of a system to mitigate disruptions such as misconfigurations or transient network issues.\nPerformance Efficiency: o maximize your performance by using computation resources efficiently. You also want to maintain that efficiency as the demand changes.\nConsider using a vendor to any technology that difficult to implement yourself. Mechanical sympathy: use a tool or system with an understanding of how it operates best. Use the technology approach that aligns best to what you are trying to achieve. i.e. consider data access patterns when you select database or storage approaches. Cost Optimization: ongoing requirement of any good architectural design. The process is iterative, and it should be refined and improved throughout your production lifetime.\nMeasure efficiency Eliminate unneeded expense Consider using managed services Best Practices for Building Solution Design tradeoffs:\nTrade consistency, durability, and space for time and latency to deliver higher performance, prioritize speed to market of new features over cost. Benchmarking to achieve cost-optimal workload. Must be based on design decisions on empiricaal data. Scalability: ensure that your architecture can handle changes in demand.\nBad design (anti-pattern): Administrator manually launches new server after users can not access application. EC2 Auto Scaling react based on alarm after EC2 reach its threshold, so new server is ready before capacity is reached. For monitoring solution there is Amazon CloudWatch. Example usage: the threshold is when CPU utilization stayed above 60% for longer than 5 minutes. When alarm is triggered, Amazon EC2 Auto Scaling immediately launches a new instance. You should also design system to scale in when demand drops off. Automate: where is possible, automate the provisioning, termination, and configuration of resources.\nAnti-pattern: When application server crashes, users manually notify administrator and administrator manually launches and configures new server. When application server crashes, Amazon CloudWatch can automatically detect it, notifies administrator. Amazon EC2 Auto Scaling can automatically launches and configures identical server. It can also automatically logs action to a change management solution. Treat resources as disposable: taking advantage of provisioned nature of cloud computing.\nThinking infrastructure as software instead of hardware (flexible and easier to upgrade) Think that it is easy to migrate between instances or other resources, so you can quickly respond to changes. Automate deployment of new resources with identical configurations. Terminate resources that are not in use. Switch to new IP addresses automatically. Test updates on new resources and then replace old resources with update ones. Use loosely coupled components: Architecture with independent components. Traditional infrastructures have chains of tightly integrated servers, each with a specific purposes. Hoewver, if one of the layers goes down, it affects many other systems.\nThe example is the usage of load balancer that routes requests between the web servers and the application servers. If one of the application server goes down, the load balancer will automatically directing all traffic to healthy servers. Message queues is asynchronous service-to-service communication used in serverless architectures. It provides communication and coordination of distributed application. Design services not servers\nConsiduer using containers or serverless solution Message queues handle communication between applications Static web assets are stored externally, such as on Amazon S3 User authentication and user state storage are handled by managed AWS services. Choose the right database solution. Traditional data centers and on-premises environments limits on available hardware and licences. It can constrains your choices of a data store solution. Consider these things:\nRead and write needs Total storage requirements Typical object size and nature of access of these objects Durability requirements Latency requirements Maximum concurrent users to support Nature of queries Required strength of integrity controls. Avoid single points of failure, where possible use redundancy to prevent single points from bringing down an entire system. Assume everything fails, then design backward.\nCreate a secondary standby database server and replicate the data. Optimize for cost, cloud allows to trade capital expense for variable expense. Capital expense (capex) are funds that a company uses to acquire, upgrade, and maintain physical assets such as property, industrial buildings, or equipment. Variable expense is a cost model. You can pay only for the individual services you need and as long as you use them.\nUse caching, cache can make the response goes faster and reduce network throughput by temporarily store data in an intermediary location. Cloudfront stores a copy of a file at an edge location close to the user, and sends a copy to the user who made the request. This technique reduces latency and S3 usage cost. Secure your entire infrastructure, it isn\u0026rsquo;t only about getting through the outer boundary of your infrastructure. It also involves individual environments and their components are secured from each other.\nIsolate parts of your infrastructure Create security groups to determine who can send and receive traffic. The security group can reduce probability a security threat on one instance can spread to every other instance in the environment. Encrypt data in transit and at rest. Enforce access control granularly using principle of least privilege Use multi-factor authentication (MFA) Use managed services Log access of resources Automate your deployment to keep security consistent. AWS Global Infrastructure Regions AWS cloud infrastructure is built around Regions. AWS has 22 region world wide. An AWS Region is a physical geographical location with two or more Availability Zones.\nCommunication between regions uses AWS backbone network infrastructure. Some of AWS regions are disabled by default. You must enable these Regions before you can use them. To achieve fault tolerance and stability, Regions are isolated from one another.\nAvailability Zone Each AWS Region consists of two or more isolated locations that are known as Availability Zones. Each Availability Zone comprises one or more data centers and designed as an independent failure zone. One Availability Zones may have as many as six data centers, however no data center can be a part of two Availability Zones.\nDistributing applications across multiple Availability Zones enables them to remain resilient in most failure situations, including natural disasters or system failures.\nLocal Zones AWS Local Zone location is an extension of an AWS Region. It is a new type of AWS infrastructure deployment that place AWS services closer to large population. With Local Zones, you can run latency-sensitive portions of applications closer to end users. Local Zones beneficial to low-latency use cases, for example media and entertainment, real-time gaming, reservoir simulation, electronic design automation, and machine learning.\nData Centers Location where data resides and processing happen. You do not specify a data center for the deployment of resources. It is the location where the actual data resides. All data centers configured to move customer data traffic away in case of failures.\nAWS Points of Presence To deliver content to end user with lower latency, Amazon CloudFront uses a global network over 200 points of presences that are comprised of Edge Locations and Regional Edge Caches.\nEdge locations are located in NA, EU, Asia, Australia, South America, Middle East, Africa, and China. Edge locations support AWS services like Amazon Route 53 and Amazon CloudFront.\nRegional edge caches are used by default with Amazon CloudFront. They are used when you have content that is not accessed requently enough to remain in an edge location. Regional edge caches absorb this content and provide an alternative to fetching the content from he origin server.\nReferences https://d1.awsstatic.com/whitepapers/architecture/AWS_Well-Architected_Framework.pdf Security Pillar Whitepaper Operational Excellence Pillar https://d1.awsstatic.com/whitepapers/architecture/AWS-Reliability-Pillar.pdf https://d1.awsstatic.com/whitepapers/architecture/AWS-Performance-Efficiency-Pillar.pdf https://aws.amazon.com/message-queue/ https://aws.amazon.com/cloudfront/features/?whats-new-cloudfront.sort-by=item.additionalFields.postDateTime\u0026amp;whats-new-cloudfront.sort-order=desc#Amazon_CloudFront_Infrastructure ","date":"2022/09/16","image":"https://devismail2y.github.io/notashoppingnote/new-notashoppingnote/cloud-2/cloud.jpg","permalink":"https://devismail2y.github.io/notashoppingnote/new-notashoppingnote/cloud-2/","summary":"Well-Architected Framework .\nA guide that is designed to help you build the most secure, high-performing, resilient, and efficient infrastructure possible for your cloud applications and workloads.\nSecurity: the ability to protect information, systems, and assets while delivering business value through risk assessments and mitigation strategies. The implementation: strong identity foundation, enable traceability, security at all layers, automate security best practices,and protect data in transit and at rest.\nOperational Excellence: the ability to run systems and gain insight into their operations to deliver business value.","title":"Cloud 2 - Introducing Cloud Architecture"},{"content":"Definition of IoT Based on IEEE, IoT is a network that connects uniquely identifiable “things” to the Internet. The “things” have sensing/actuation and potential programmability capabilities.\nBased on ITU-T Y.2060 A device is a piece of equipment with the mandatory capabilities of communication and the optional capabilities of sensing, actuation, data capture, data storage, and data processing. Thing is an object of the physical world (physical things) or the information world (virtual things), which is capable of being identified and integrated into communication networks.\nThe Implementation of IoT Today, many industries rely on IoT to implement these technologies:\nSmart Grid to support more efficient, resilient, and more supportive of environmentally responsible living. Connected vehicle, leveraging onboard sensors to scan the roadway and make real-time calculations related to driver’s safety. Also enable capability to do vehicle-to-vehicle (V2V) communication capabilities. Manufacturing, by connecting myriad sensors and actuators to support manufacturing operation. Wearables, things that are strapped or attached to the human body to collect and communicate information. Implantables and medical devices, sensor, controller or communication device that is inserted and operated within the human body. The Need of IoT Security and Safety IoT security is different from traditional cybersecurity as it is a product that comes from other engineering disciplines. IoT security includes direct or distributed monitoring and control of the state of physical systems connected to the internet. Security for the IoT has to ensure not only basic information security factors (confidentiality, integrity, non-repudiation), but also the “physical element” of the devices.\nThere are four cyber-physical aspects of the IoT face a safety versus security:\nEveryone is responsible for security The IoT and CPS expose huge security problems by crossing information computing and the physical world Traditional core engineering disciplines more often do not consider security. Many security engineers are ignorant of core engineering disciplines, including fault-tolerant safety design. Based on a great statement by Dr. Barry Boehm:\nSafety is related about how the system must not harm the world Security is related about how the world must not harm the system These are examples of threat contained in the IoT\nAttackers can pivot the attack from IoT devices into the network, and even onto other industries. Without proper authentication, malicious hackers can tamper thermodynamics sensors to provide falsified information and harm the workers. In the absence of a compatible framework for the IoT security, NIST formed CPS Public Working Group represents a cross-industry collaboration of security professionals working to build a framework approach to solve many cyber-physical IoT challenges. This framework provides helpful references to tackle security and physical properties of IoT. It can also help professionals to build system-specific security standards for different implementations.\nThe CPS and The IoT Cyber-Physical Systems have some overlapping definitions with the IoT. CPS consists of connected sensors, actuators, with adequate monitoring and controlling systems. However it does not necessarily have to be connected to the internet.\nEven though CPS is technically air-gapped from the internet, it may be connected to the internet one way or another. CPS still needs to be maintained, monitored, and patched. It connects to the internet by using indirect connections, for example supply chain, operating personnel, or out-of-band patch management system.\nCPS is generally designed for safety, security, and functionality. It, however, can be enveloped into IoT simply by connecting it to the internet. So, the intrinsic capability of IoT is its ability to communicate to the internet.\nDevice Lifecycle The IoT device lifecycle divided into 3 phases\nIoT Device Implementation, aspect of IoT device design and development. The organization included in this phase are:\nOriginal Equipment Manufacturer (OEM) - procure customized hardware and firmware and tailor a device with unique physical characteristics. OEMs also package and distribute products to end operators. Board Support Package (BSP) - Typically provides the OEM customized firmware, APIs, and drivers between the hardware and OS. Original Design Manufacturers (ODM) - providing OS and hardware sub-assemblies. IoT Service Implementation, aspect to support IoT deployments through enterprise APIs, gateways, and other architectural commodities.\nCloud Service Provider (CSP) : public cloud that at minimum provided IAAS. OEMs : the IoT manufacturers that operate and manage their own infrastructure. IoT Device and Service Deployment, the end of deployment phase of IoT devices in the IoT infrastructure.\nHardware and Operating System There are many IoT development boards, such as Arduino and Raspberry Pi, those are popular for prototyping and provide various levels of functionality. Some IoT devices utilize Real Time Operating System (RTOS) for process and memory management as well as including message and communication services.\nIoT Communications In most of the cases, an IoT device communicates through the gateway to reach the controller or a web service. The example can be as simple as a smartphone, acting as a gateway, colocated with the IoT endpoint and communicating over an RF protocol, such as Bluetooth-LE, ZigBee, or Wi-Fi. Others may be more centrally located in data centres using proprietary gateway IoT protocols, such as Message Queuing Telemetry Transport (MQTT) or Representational State Transfer (REST). A wide array of protocols may be used to enable message transfer and communication.\nIt is worth noting that industry regulations are applicable to IoT devices, such as HIPAA, PCI, SOX, and others.\nMessaging Protocols These formats are\nMessage Queuing Telemetry Transport (MQTT) Publish/subscribe model whereby clients subscribe to topics and maintain an always-on TCP connection to broker server. If new messages are sent to the broker, they include a topic with the message, allowing the broker to determine which clients should receive the message. Constrained Application Protocol (CoAP) CoAP devices communicate to web servers using specific URI to process commands. This messaging protocol are UDP-based to call HTTP request method using resource-constrained devices,such as WSN.\nData Distribution Service (DDS) Just like MQTT, it also uses a publish/subscribe model. DDS allows communications to happen anonymously and automatically, since no relationship between the endpoints are required. QoS mechanisms are built into the protocol. DDS is designed for device-to-device communication and is used in deployment scenarios, such as wind farms, medical imaging systems, and asset-tracking systems.\nAdvanced Message Queuing Protocol (AMQP) Designed to provide a queuing system in support of server-to-server communications. AMQP allows both publish/subscribe and point-to-point communication models.\nExtensible Messaging and Presence Protocol (XMPP) Spports the transmission of XML messages over TCP, allowing developers to implement service discovery and service advertisements.\nGateways Most of the message specifications above require protocol-specific gateways or other devices to re-encapsulate the communication over another protocol or perform protocol translation. This manipulating protocols can have enormous security implications or introducing new attack surfaces into an enterprise.\nTransport, Network, Data Link and Physical Protocols Transport Protocols Transmission Control Protocol (TCP) facilitates acknowledgement of TCP segment transmitted across a network. Full TCP/IP stack that can speak HTTP or MQTT over a secure (TLS) connection. However, TCP is frequently unsuitable for use in constrained network environments (high latency or limited bandwidth).\nOn the other hand, User Datagram Protocol (UDP) acts as an alternative to TCP. UDP provides a lightweight transport protocol for connectionless communications. Many highly constrained IoT sensor devices support UDP. For the security reason, there is an alternative to TLS design called Datagram TLS (DTLS) intended for products that implement UDP-based transport.\nNetwork Protocols IPv4 and IPv6 both play a role in communication in IoT infrastructure. IPv6 over Low Power Wireless Personal Area Network (6LoWPAN) supports use of IPv6 within network-constrained environments. It supports lower data rates of internet connectivity. Designers can also take advantage of link encryption offered within IEEE 802.15.4.\nData Link and Physical Protocols IEEE 802.15.4 is designed to operate using p2p or star topologies for low-power and low-speed environments. It supports data rates up to 205kb/s. The PHY layer is responsible for managing RF network access, while the MAC layer is responsible for managing transmission and receipt of frames onto the data link. ZWave supports unicast, multicast, and broadcast. ZWave operates at 908.42 MHz (NA) and 868.42 MHz (Europe) with data rates of 100kb/s over a range of about 30 metres. Bluetooth Low Energy (BLE) designed for enhanced battery life operates in 2.4 GHz frequency range. It also supports high-rate frequency hopping spread spectrum and AES encryption. Power Line COmmunication (PLC) - communications that are modulated directly over existing power lines. Cellular communications is boosted by moving towards 5G communications allowing new centralised controller functions to be created that support multitudes of geographically dispersed sensors/actuators with limited infrastructure in place. ","date":"2022/09/14","image":"https://devismail2y.github.io/notashoppingnote/new-notashoppingnote/iot-security-1/IoTSec.jpg","permalink":"https://devismail2y.github.io/notashoppingnote/new-notashoppingnote/iot-security-1/","summary":"Definition of IoT Based on IEEE, IoT is a network that connects uniquely identifiable “things” to the Internet. The “things” have sensing/actuation and potential programmability capabilities.\nBased on ITU-T Y.2060 A device is a piece of equipment with the mandatory capabilities of communication and the optional capabilities of sensing, actuation, data capture, data storage, and data processing. Thing is an object of the physical world (physical things) or the information world (virtual things), which is capable of being identified and integrated into communication networks.","title":"IoT Security 1 - A Brave New World"},{"content":"Hello World Hi, im here\n","date":"2022/09/01","image":"https://devismail2y.github.io/notashoppingnote/new-notashoppingnote/firstpost/test.jpg","permalink":"https://devismail2y.github.io/notashoppingnote/new-notashoppingnote/firstpost/","summary":"Hello World Hi, im here","title":"Template"}]